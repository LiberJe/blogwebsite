var mysql =require("mysql");
var qs=require("querystring");
var jade=require("jade");
var status=require("login_status");
var marked=require("marked");

// var connection=mysql.createConnection({
//     host:"127.0.0.1",
//     port:"3306",
//     user:"root",
//     password:"root",
//     database:"website"
// })

// connection.connect(function(err) {
//     if(err){
//         console.error(err);
//     }
//     console.log("connection succed");
// })

// 断线重连
var connection;
function handleError () {
    connection = mysql.createConnection({
        host: '127.0.0.1',
        user: 'root',
        password: 'root',
        database: 'website',
        port: 3306
    });

    //连接错误，2秒重试
    connection.connect(function (err) {
        if (err) {
            console.log('error when connecting to db:', err);
            setTimeout(handleError , 2000);
        }else{
            console.log("connection succed");
        }
        
    });

    connection.on('error', function (err) {
        console.log('db error', err);
        // 如果是连接断开，自动重新连接
        if (err.code === 'PROTOCOL_CONNECTION_LOST') {
            handleError();
        } else {
            throw err;
        }
    });
}
handleError();



//增删改查
function queryall(res) {
    connection.query("SELECT * FROM articlelist",function(err,data) {
        if(err){
            console.error(err);
        }else{
            res.writeHead(200,{'Content-Type': 'application/json'});
            res.end(JSON.stringify(data),"utf-8");
        }
    })
}

function update(req,res) {
    var updation="";
    req.on("data",function(data) {
        updation+=data;
        console.log(updation);
    })
    req.on("end",function(data){
        var val=JSON.parse(updation);
        var condition="UPDATE articles SET content=?,title=? WHERE id=?";
        var conditonval=[val.content,val.title,val.id];
        connection.query(condition,conditonval,function(err,data){
            if(err){
                console.error("err");
            }else{
                var dpdata={"check":true};
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(dpdata),"utf-8");
            }
        })
    })
}

function create(req,res) {
    var addtion="";
    req.on("data",function(data){
        addtion+=data;
    })
    req.on("end",function(data){
        var val=JSON.parse(addtion);
        console.log(val);
        var condition="INSERT INTO articlelist (title,date,content) VALUES(?,?,?)";
        var conditonval=[val.title,val.date,val.content];
        connection.query(condition,conditonval,function(err,data){
            if(err){
                console.error(err);
            }else{
                var dpdata={"check":true}
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(dpdata),"utf-8");
            }
        })
    })
}

function delData(req,res) {
    var deldata="";
    req.on("data",function(data){
        deldata+=data;
    })
    req.on("end",function(data){
        var val=JSON.parse(deldata);
        var condition="DELETE FROM articlelist WHERE id="+val.id;
        
        connection.query(condition,function(err,data) {
            if(err){
                console.error(err);
            }else{
                var dpdata={"check":true}
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(dpdata),"utf-8");
            }
        })
    })
}


//文章获取
function getPapper(req,res){
    var limit="";
    req.on("data",function(data) {
        limit+=data;
    })
    req.on("end",function(data){
        console.log(limit);
        var condition="SELECT * FROM articleList LIMIT"+limit;
        
        connection.query(condition,function(err,data) {
            if(err){
                console.error(err);
            }else{
                for(var i=0;i<data.length;i++){
                    data[i].content=data[i].content.substring(0,200);
                }
                console.log(data);
                res.writeHead(200,{'Content-Type': 'application/json'});
                res.end(JSON.stringify(data),"utf-8");
            }
        })
    })
}

//目录获取
function getCatalog(res){
    var condition="SELECT id,title,date FROM articleList";
    
    connection.query(condition,function(err,data) {
        if(err){
            console.error(err);
        }else{
            console.log(data);
            res.writeHead(200,{'Content-Type': 'application/json'});
            res.end(JSON.stringify(data),"utf-8");
        }
    })
}

//生成文章
function showpapper(query,req,res){
    var id=qs.parse(query).id;

    var condition="SELECT * FROM articleList WHERE id="+id;

    connection.query(condition,function(err,data){
        if(err){
            console.log(err);
        }else{
            console.log(data);
            var html=jade.renderFile("./static/template/papper.jade",{
                "title":data[0].title,
                "date":"@"+data[0].date,
                "content":marked(data[0].content)
            });
            res.writeHead(200,{'Content-type':'text/html'});
            res.end(html,"utf-8");
        }
    })
}

//登陆验证
function loginCheck(query,req,res){
    var condition="SELECT * FROM user";
    var postdata="";
    req.on("data",function (chunk) {
        postdata+=chunk;
    })
    req.on("end",function(){
        
        connection.query(condition,function(err,data) {
            if(err){
                console.error(err);
            }else{
                postdata=qs.parse(postdata);
                if(postdata.username==data[0].username && postdata.password==data[0].password){
                    
                    status.status.init();

                    res.writeHead(200,{
                        'Content-Type': 'text/plain'});
                    res.end("true","utf-8");
                }
            }
        })
    })
}

// 获取评论
function getComments(req,res) {
    var id="";
    req.on("data",function(data) {
        id+=data;
    })
    req.on("end",function() {
        var val=JSON.parse(id);
        var condition="SELECT guest_name,guest_content,date FROM article_comment WHERE article_id="+parseInt(val);
        connection.query(condition,function(err,data){
            if(err){
                console.error(err);
            }else{
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(data),"utf-8");
            }
        })
    })
}

//评论提交
function commentPublish(req,res){
    var comment="";
    req.on("data",function(data) {
        comment+=data;
    })
    req.on("end",function() {
        var val=JSON.parse(comment);
        var condition="INSERT INTO article_comment (article_id,guest_name,guest_email,guest_content,date) VALUES(?,?,?,?,?)";
        var conditonval=[val.article_id,val.name,val.email,val.content,val.date];
        connection.query(condition,conditonval,function(err,data){
            if(err){
                console.error(err);
            }else{
                var dpdata={"check":true}
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(dpdata),"utf-8");
            }
        })
    })
}

// 游客留言
function leaveMessage(req,res){
    var message="";
    req.on("data",function(chunk){
        message+=chunk;
    })
    req.on("end",function(){
        var val=JSON.parse(message);
        console.log(val.email);
        var condition="INSERT INTO leave_message(email,txt) VALUES (?,?)";
        var conditonval=[val.email,val.txt];
        connection.query(condition,conditonval,function(err,data){
            if(err){
                console.error(err);
            }else{
                var dpdata={"check":true}
                res.writeHead(200,{"Content-Type":"application/json"});
                res.end(JSON.stringify(dpdata),"utf-8");
            }
        })
    })
}

exports.queryall=queryall;
exports.update=update;
exports.create=create;
exports.delData=delData;

exports.getPapper=getPapper;
exports.getCatalog=getCatalog;
exports.showpapper=showpapper;

exports.loginCheck=loginCheck;
exports.getComments=getComments;
exports.commentPublish=commentPublish;
exports.leaveMessage=leaveMessage;